class Vnode {
  constructor ({
    tag = 'div',
    attrs = {},
    children = [],
    selfClose = false
  }) {
    this.tag = tag
    this.attrs = attrs
    this.children = children

    this.selfClose = selfClose
  }

  static render (vnode) {
    if (!(vnode instanceof Vnode)) return vnode || ''
    if (vnode.selfClose) {
      return `\n<${vnode.tag} ${
        Object.keys(vnode.attrs)
          .map(key => vnode.attrs[key] ? `${key}="${vnode.attrs[key]}"` : '')
          .join(' ')
      }>`
    }

    return `
    <${vnode.tag} ${
  Object.keys(vnode.attrs)
    .map(key => vnode.attrs[key] ? `${key}="${vnode.attrs[key]}"` : '')
    .join(' ')
}>${(vnode.children && vnode.children.length && vnode.children.map(Vnode.render).join('')) || ''}</${vnode.tag}>`
  }

  toString () {
    return Vnode.render(this)
  }
}

module.exports = Vnode
