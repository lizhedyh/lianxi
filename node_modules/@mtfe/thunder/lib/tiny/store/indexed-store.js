import DB from '@dp/indexeddb/build/es6'

export class IDBStorage {
  constructor ({ project, version }) {
    this.type = 'IDBCache'
    this.prefix = 'Thunder:cache:' + project
    this.project = project
    this.state = {
      cacheMap: {}
    }
    this.db = DB
  }

  _getCacheName (name) {
    return this.prefix + '~' + name
  }

  add (payload) {
    const name = payload.name
    return this.db.setKV(this._getCacheName(name), payload, payload.cacheAge || 3600 * 24 * 365)
  }

  get (name) {
    return this.db.getKV(this._getCacheName(name))
      .then(res => {
        return res.value
      })
      .catch(e => {
        // ignore
        console.error(e)
      })
  }

  saveChunksMap () {}

  remove (key) {
    // try remove
    return this.db.setKV(this._getCacheName(key), null, 1)
  }

  clear (key, value) {
    // indexedDB.deleteDatabase(this.name)
  }
}

export default thunder => {
  thunder.store = new IDBStorage({
    project: thunder.starkAppKey || thunder.state.project,
    version: thunder.version
  })
}
