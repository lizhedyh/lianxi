import { fakeId } from './helper'
import { request, noop } from '../util'

export class LXReporter {
  constructor () {
    this.logQueue = []
    this._timer = null
    this._delay = 100
    this._url = '//report.meituan.com'
    this.report = this.report.bind(this)
  }

  _report (fn = noop) {
    const msid = fakeId()
    const uuid = fakeId()
    const lxCuid = document.cookie.replace(/(?:(?:^|.*;\s*)_lxsdk_cuid\s*=\s*([^;]*).*$)|^.*$/, '$1')

    const logs = this.logQueue.map(data => {
      const seq = fakeId().slice(0, 4)
      const reqId = fakeId()

      // 增加灵犀 trace id 上报
      data.lxid = lxCuid

      return {
        'req_id': reqId,
        'val_cid': data.cid ? data.cid : 'c_c4nzgz77',
        'nt': 0,
        'isauto': 7,
        'tm': data.createdAt,
        'val_lab': data,
        'val_bid': data.bid || 'b_w006udto',
        'seq': +seq,
        'nm': 'MV'
      }
    })

    return request({
      url: this._url,
      method: 'post',
      data: [{
        'category': 'data_sdk_smartpay',
        'sdk_ver': '4.3.0',
        'ct': 'www',
        'ch': 'web',
        'ua': (navigator && navigator.userAgent),
        'sc': '640*360',
        'uuid': uuid,
        'lxid': lxCuid,
        'msid': msid,
        'appnm': 'qrcode_pay_fe',
        'evs': logs
      }]
    })
      .then(() => {
        this.logQueue.length = 0
        fn()
      })
      .catch(err => {
        if (err) console.log(err)
        fn(err)
      })
  }

  report (data, fn) {
    data.createdAt = Date.now()
    this.logQueue.push(data)
    if (this._timer) clearTimeout(this._timer)
    this._timer = setTimeout(() => {
      this._timer = null
      this._report(fn)
    }, this._delay)
  }
}

const lxReporter = new LXReporter()

export default lxReporter
