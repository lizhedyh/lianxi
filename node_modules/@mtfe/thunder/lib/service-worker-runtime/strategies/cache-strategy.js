import { debug } from '../helpers'
import { strToReg } from '../util'

export default class CacheStrategy {
  constructor ({ name, cacheName, cacheStore, helpers, options }) {
    this.name = name
    this.cacheName = cacheName
    this.helpers = helpers
    this.cacheStore = cacheStore
    this.state = options
    const strategyOptions = options.strategies[this.name] || {}

    if (strategyOptions instanceof Array) {
      this.options = {
        includes: strToReg(strategyOptions),
        excludes: []
      }
    } else {
      this.options = {
        includes: strToReg(strategyOptions.includes || []),
        excludes: strToReg(strategyOptions.excludes || [])
      }
    }
  }

  getCache () {
    return caches.open(this.cacheName)
      .then(cache => {
        return cache
      })
  }

  test (request) {
    if (!request || !request.url) return false
    let canCache = false
    let has = false
    const url = request.url

    // 没有相关配置，忽略
    if (!this.options) return canCache

    this.options.excludes.map(spec => {
      if (has) return
      has = spec.test(url)
    })

    if (has) return canCache

    this.options.includes.map(spec => {
      if (canCache) return
      canCache = spec.test(url)
    })

    return canCache
  }

  debug (msg) {
    debug(`[Strategies ${this.name}]: ${msg}`)
  }
}
