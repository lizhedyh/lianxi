import CacheStrategy from './cache-strategy'

export default class CacheFirst extends CacheStrategy {
  constructor ({ cacheName, cacheStore, helpers, options }) {
    super({
      name: 'CacheFirst',
      cacheName,
      cacheStore,
      helpers,
      options
    })
  }

  handleRequest (req) {
    return this.cacheFirst(req)
  }

  cacheFirst (req) {
    let response

    return this.getCache()
      .then(cache => {
        return cache.match(req)
      })
      .then(res => {
        if (!res) return false
        response = res
        // check isCacheFresh
        // cost: 2 - 10 ms
        return this.helpers.isCacheFresh(req)
      })
      .then(isFresh => {
        if (!isFresh) {
          this.debug(`❌ network ${req.url}`)
          return this.helpers.fetchAndCache(req)
        }
        this.helpers.logger.markEnd(req.url, {
          strategy: 'cacheFirst'
        })
        this.debug(`✅ cache ${req.url}`)

        return response
      })
  }
}
