const data = {
  local: {
    version: '1f729710886d20b21e48c32d4b0e30fadd9b838c',
    raw: `/**
 * 秒付入口js
 * Created by yangyitian on 2017/6/14.
 */
const FROM = window._Global.from;

let Menu = require('tools/mf/asynGetMenu');
let menuRender = require('tools/mf/renderMenu');
let inputRender = require('tools/mf/renderInput');
let resultRender = require('tools/mf/renderResult');
let getOpenId = require('tools/mf/getOpenId')[FROM];
let initBridge = require('tools/pay/ready')[FROM];
let menuPay = require('tools/mf/menuPay');
let inputPay = require('tools/mf/inputPay');
let Msg = require('cmp/msg');
let Track = require('tools/track');
let loadingDom = $('.loading-wrap');
const networkSpeed = require('tools/networkSpeed');


//监听菜单加载成功
Menu.event.$on('success', function(data){
    loadingDom.hide();
    window._Global.tplType = 'MF';

    //渲染菜单PV埋点
    Track.send('menu',{
        page_type: data.payCode || '',
        order_id: data.requestId,
        third_order_id: data.orderId
    });

    //判断拉单返回的paycode值
    //如果不等于7000则渲染结果模板
    if(data.payCode !== 7000){
        resultRender(data);
    }else{
        window._Global.tplType = 'MF';
        menuRender.render(data, window.state, window._Global);
    }

});


//监听菜单加载失败
Menu.event.$on('fail', function(data){
    loadingDom.hide();
    window._Global.tplType = 'MF-XC';

    //统计输入金额渲染PV
    Track.send('menuInput',{
        order_id: data.requestId
    });
    inputRender.render(window.state, window._Global, data);
});

//监听菜单刷新成功事件
Menu.event.$on('refreshsuccess', function(data){
    try{
        menuRender.refreshRender(data);
    }catch(err){
        Msg.alert('刷新失败，请重新扫码！')
    }
});

//监听菜单刷新失败事件
Menu.event.$on('refreshfail', function(data){
    Msg.alert('刷新失败了');
    menuRender.hideRefreshLoading();
});

//监听菜单页面支付确认事件
//调用支付逻辑
menuRender.event.$on('sure', function(data){
    if (!window._Global.canPay) {
        Msg.alert('系统升级中，暂时无法进行支付');
        return;
    }

    //菜单点击支付埋点
    Track.event('menuClickPay',{
        third_order_id: window.menu.orderId || '',
        order_id: window.menu.requestId || ''
    });

    menuPay(data).payAction('/api/quick/trade/initTradeWithBiz','MF')
        .event.$on('refresh', function(){

        menuRender.showRefreshBtn();
    });
});

//监听菜单需要刷新
//并触发刷新请求
menuRender.event.$on('startRefresh', function(){
   Menu.asynGet('refresh');
});


//监听键盘点击确认事件
//调用支付逻辑
inputRender.event.$on('sure', (data) => {
    if (!window._Global.canPay) {
        Msg.alert('系统升级中，暂时无法进行支付');
        return;
    }

    //输入金额点击支付埋点
    Track.event('menuInputClickPay',{
        order_id: window.menu.requestId || ''
    });

    inputPay(data).payAction('/api/trade/initTrade','MF-XC');
});


//秒付loading展示pv
Track.send('menuLoading');

//支付初始化
$(function(){
    initBridge(()=>{
        getOpenId(()=>{
            //执行异步拉单
            Menu.asynGet();
        });
    });
    // 弱网网速统计
    networkSpeed();
})

`,
  },
  remote: {
    version: '84944ab892cf87af2fc5e86de28d243cca7c7d0c',
    raw: `/**
 * 秒付入口js
 * Created by yangyitian on 2017/6/14.
 */
const FROM = window.state.from;

let Menu = require('tools/mf/asynGetMenu');
let menuRender = require('tools/mf/renderMenu');
let inputRender = require('tools/mf/renderInput');
let resultRender = require('tools/mf/renderResult');
let getOpenId = require('tools/mf/getOpenId')[FROM];
let initBridge = require('tools/pay/ready')[FROM];
let menuPay = require('tools/mf/menuPay');
let inputPay = require('tools/mf/inputPay');
let Msg = require('cmp/msg');
let LXReport = require('tools/LXReport');
let Report = require('tools/report');
let LXTrack = require('tools/LXTrack');

let loadingDom = $('.loading-wrap');

//监听菜单加载成功
Menu.event.$on('success', function(data){
    loadingDom.hide();
    window.tplType = 'MF';

    //渲染菜单PV埋点
    LXTrack.menuPv({
        page_type: data.payCode || '',
        order_id: data.requestId,
        third_order_id: data.orderId
    });

    //判断拉单返回的paycode值
    //如果不等于7000则渲染结果模板
    if(data.payCode !== 7000){
        resultRender(data);
    }else{
        menuRender.render(data, window.poi, window.state);
    }

});


//监听菜单加载失败
Menu.event.$on('fail', function(data){
    loadingDom.hide();
    window.tplType = 'MF-XC';

    //统计输入金额渲染PV
    LXTrack.inputPv({
        order_id: data.requestId
    });

    inputRender.render(window.poi, window.state, data);
});

//监听菜单刷新成功事件
Menu.event.$on('refreshsuccess', function(data){
    try{
        menuRender.refreshRender(data);
    }catch(err){
        alert(err);
    }
});

//监听菜单刷新失败事件
Menu.event.$on('refreshfail', function(data){
    Msg.alert('刷新失败了');
    menuRender.hideRefreshLoading();
});

//监听菜单页面支付确认事件
//调用支付逻辑
menuRender.event.$on('sure', function(data){
    if (!window.state.canPay) {
        Msg.alert('系统升级中，暂时无法进行支付');
        return;
    }

    //菜单点击支付埋点
    LXTrack.menuClickPayEvent({
        third_order_id: window.menu.orderId || '',
        order_id: window.menu.requestId || ''
    });

    //菜单支付点击数据上报
    //  mta上报
    Report('initTrade');
    //  灵犀上报
    LXReport.event({
        val_bid: 'menu_onclick',
        val_cid: 'zcm-fe-mf-menu',
        val_lab: {
            poiId: window.poi.poiId
        }
    });

    menuPay(data).payAction('/api/quick/trade/initTradeWithBiz','MF')
        .event.$on('refresh', function(){
            menuRender.showRefreshBtn();
        });
});

//监听菜单需要刷新
//并触发刷新请求
menuRender.event.$on('startRefresh', function(){
   Menu.asynGet('refresh');
});

//监听菜单模板渲染完成事件
//异步拉取发票头
menuRender.event.$on('render', function(ele){
    //发票信息userFrom
    let from = {
        'weixin': 1,
        'alipay': 2,
        'dianping': 3,
        'meituan': 0
    };
    let outerUserId = window.state.openId || '';
    let userFrom = window.state.from || window.from || '';
    let feHost = window.state.feHost || '';
    userFrom = from[userFrom];

    $.ajax({
        url: feHost+'/api/quick/dish/getInvoiceList',
        type: 'POST',
        data: {
            userFrom,
            outerUserId,
        },
        dataType: 'json',
        success: result => {
            if (result.data && result.data.invoiceList && result.data.invoiceList.length > 1) {
                let invoiceList = result.data.invoiceList;
                try{
                    ele.find('.invoice-input').val(invoiceList[invoiceList.length - 1]);
                }catch(err){
                    alert(err);
                }
            }
        },
        error: (err) => {
            return false;
        }
    });
});



//监听键盘点击确认事件
//调用支付逻辑
inputRender.event.$on('sure', (data) => {
    if (!window.state.canPay) {
        Msg.alert('系统升级中，暂时无法进行支付');
        return;
    }

    //输入金额点击支付埋点
    LXTrack.inputClickPayEvent({
        order_id: window.menu.requestId || ''
    });


    //秒付输入金额点击埋点
    Report('initTrade');
    LXReport.event({
        val_bid: ' onclick_sf_pay',
        val_cid: 'zcm-fe-mf-pay',
        val_lab: {
            poiId: window.poi.poiId
        }
    });

    inputPay(data).payAction('/api/trade/initTrade','MF-XC');
});


//秒付loading展示pv
LXTrack.loadingPv();

//支付初始化
$(function(){
    initBridge(()=>{
        getOpenId(()=>{
            //执行异步拉单
            Menu.asynGet();
        });
    });
})
`,
  },
  patch: {
    raw: `=77	-5	+st	=1	-1	+te	=431	-1	+LXRepo	=1	-3	+t	=18	-1	+LXRepo	=1	-3	+t	=8	-1	+Rep	=1	-8	+rt	=3	-1	+require	=2	-1	+too	=1	+s/rep	=1	-7	=1	-2	+t	=4	-4	+le	=2	-5	+LXT	=1	+ac	=1	-5	=18	-1	+LXTrack');%0A%0Al	=2	+ loadingDom = $('.loading-	=1	-1	=1	-2	+a	=1	-3	=3	-1	=89	-8	=36	+LX	=6	-6	=4	-2	+Pv(	=244	-39	=31	-5	+poi	=9	-5	+st	=1	-1	+te	=100	-8	=41	+LX	=6	-11	+i	=4	-2	+Pv(	=43	+%0A	=30	-5	+poi	=9	-5	+st	=1	-1	+te	=150	-4	=6	-13	+err	=1	+;	=222	-5	+st	=1	-1	+te	=90	+LX	=6	-7	=12	-2	+Event(	=112	+//%E8%8F%9C%E5%8D%95%E6%94%AF%E4%BB%98%E7%82%B9%E5%87%BB%E6%95%B0%E6%8D%AE%E4%B8%8A%E6%8A%A5%0A    //  mta%E4%B8%8A%E6%8A%A5%0A    Report('initTrade');%0A    //  %E7%81%B5%E7%8A%80%E4%B8%8A%E6%8A%A5%0A    LXReport.event(%7B%0A        val_bid: 'menu_onclick',%0A        val_cid: 'zcm-fe-mf-menu',%0A        val_lab: %7B%0A            poiId: window.poi.poiId%0A        %7D%0A    %7D);%0A%0A    	=108	-1	+  	=8	+  	=29	+    	=116	+//%E7%9B%91%E5%90%AC%E8%8F%9C%E5%8D%95%E6%A8%A1%E6%9D%BF%E6%B8%B2%E6%9F%93%E5%AE%8C%E6%88%90%E4%BA%8B%E4%BB%B6%0A//%E5%BC%82%E6%AD%A5%E6%8B%89%E5%8F%96%E5%8F%91%E7%A5%A8%E5%A4%B4%0AmenuRender.event.$on('render', function(ele)%7B%0A    //%E5%8F%91%E7%A5%A8%E4%BF%A1%E6%81%AFuserFrom%0A    let from = %7B%0A        'weixin': 1,%0A        'alipay': 2,%0A        'dianping': 3,%0A        'meituan': 0%0A    %7D;%0A    let outerUserId = window.state.openId %7C%7C '';%0A    let userFrom = window.state.from %7C%7C window.from %7C%7C '';%0A    let feHost = window.state.feHost %7C%7C '';%0A    userFrom = from%5BuserFrom%5D;%0A%0A    $.ajax(%7B%0A        url: feHost+'/api/quick/dish/getInvoiceList',%0A        type: 'POST',%0A        data: %7B%0A            userFrom,%0A            outerUserId,%0A        %7D,%0A        dataType: 'json',%0A        success: result =%3E %7B%0A            if (result.data && result.data.invoiceList && result.data.invoiceList.length %3E 1) %7B%0A                let invoiceList = result.data.invoiceList;%0A                try%7B%0A                    ele.find('.invoice-input').val(invoiceList%5BinvoiceList.length - 1%5D);%0A                %7Dcatch(err)%7B%0A                    alert(err);%0A                %7D%0A            %7D%0A        %7D,%0A        error: (err) =%3E %7B%0A            return false;%0A        %7D%0A    %7D);%0A%7D);%0A%0A%0A	=81	-5	+st	=1	-1	+te	=92	+LX	=6	-12	+i	=12	-2	+Event(	=57	+%0A    //%E7%A7%92%E4%BB%98%E8%BE%93%E5%85%A5%E9%87%91%E9%A2%9D%E7%82%B9%E5%87%BB%E5%9F%8B%E7%82%B9%0A    Report('initTrade');%0A    LXReport.event(%7B%0A        val_bid: ' onclick_sf_pay',%0A        val_cid: 'zcm-fe-mf-pay',%0A        val_lab: %7B%0A            poiId: window.poi.poiId%0A        %7D%0A    %7D);%0A%0A	=84	+LX	=6	-11	+l	=6	-1	+Pv(	=140	-34	=3	-1`
  }
}

module.exports = data;
