const path = require('path');
const SimpleGit = require('simple-git/promise');

function retrieveStateFromCommit(gitRepo, filePath, commit) {
  return gitRepo.show([
    `${commit}:${filePath}`,
  ])
}

function getAllVersionsOfFileFromGit(pathToRepo, filePath) {
  const gitRepo = SimpleGit(pathToRepo);
  const projectFilePath = path.isAbsolute(filePath) ? path.relative(pathToRepo, filePath) : filePath;

  return gitRepo.log([
      '--first-parent',
      // '--max-count=5',
      '--',
      projectFilePath,
    ])
    .then((summary) => {
      const hashArray = summary.all
        .map(commit => commit.hash);
      return [...new Set(hashArray)];
    })
    .then((commitShaArray) => {
      return Promise.all(commitShaArray.map((commitSha) => retrieveStateFromCommit(gitRepo, projectFilePath, commitSha)));
    });
}

module.exports = {
  getAllVersionsOfFileFromGit,
};
